import { useEffect, useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { getAdminStats, moderateProduct, clearAllTransactions } from '../../services/adminService';
import { UserProduct, clearPendingProducts, resetAllProductsStatus } from '../../services/userProductsService';
import {
  CheckIcon,
  XMarkIcon,
  ExclamationTriangleIcon,
  ArrowPathIcon,
  TrashIcon
} from '@heroicons/react/24/outline';

interface AdminUser {
  email: string;
  username: string;
  role: 'admin' | 'moderator' | 'support';
  isAuthenticated: boolean;
}

interface AdminStats {
  totalUsers: number;
  activeUsers: number;
  pendingProducts: number;
  totalProducts: number;
  totalSales: number;
  totalRevenue: number;
  recentTransactions: any[];
  pendingModeration: UserProduct[];
}

const AdminDashboard = () => {
  const navigate = useNavigate();
  const [adminUser, setAdminUser] = useState<AdminUser | null>(null);
  const [loading, setLoading] = useState(true);
  const [refreshing, setRefreshing] = useState(false);
  const [stats, setStats] = useState<AdminStats | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  const loadAdminData = () => {
    setRefreshing(true);
    try {
      const adminStats = getAdminStats();
      setStats(adminStats);
    } catch (error) {
      console.error('Error loading admin stats:', error);
    } finally {
      setRefreshing(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const clearTemporaryData = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ —Å–±—Ä–æ—Å–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.')) {
      try {
        // –û—á–∏—Å—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        clearAllTransactions();

        // –û—á–∏—Å—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        clearPendingProducts();

        // –°–±—Ä–æ—Å–∏–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π
        resetAllProductsStatus();

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        loadAdminData();

        alert('–í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.');
      } catch (error) {
        console.error('Error clearing temporary data:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
      }
    }
  };

  useEffect(() => {
    // Check if user is logged in as admin
    const storedAdmin = localStorage.getItem('admin_user');

    if (!storedAdmin) {
      navigate('/adminpaneel');
      return;
    }

    try {
      const parsedAdmin = JSON.parse(storedAdmin);
      if (!parsedAdmin || !parsedAdmin.isAuthenticated) {
        navigate('/adminpaneel');
        return;
      }

      setAdminUser(parsedAdmin);
      // Fetch admin stats
      loadAdminData();
    } catch (error) {
      console.error('Failed to parse admin user data', error);
      navigate('/adminpaneel');
    } finally {
      setLoading(false);
    }
  }, [navigate]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
  const handleApproveProduct = (productId: string) => {
    if (!adminUser) return;

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
    const success = moderateProduct(productId, 'approve', adminUser.username);

    if (success) {
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      loadAdminData();
    }
  };

  const handleRejectProduct = (productId: string) => {
    if (!adminUser) return;

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
    const success = moderateProduct(productId, 'reject', adminUser.username);

    if (success) {
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      loadAdminData();
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('admin_user');
    navigate('/adminpaneel');
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-100">
        <div className="text-xl text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-100">
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
          <div className="flex items-center space-x-4">
            <div className="text-sm text-gray-600">
              <span className="font-medium">{adminUser?.username}</span> ({adminUser?.role})
            </div>
            <button
              onClick={handleLogout}
              className="px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm"
            >
              –í—ã—Ö–æ–¥
            </button>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {/* Stats cards */}
          <div className="bg-white p-6 rounded-lg shadow-sm">
            <h3 className="text-sm font-medium text-gray-500">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
            <p className="text-3xl font-bold text-gray-900 mt-2">{stats?.totalUsers || 0}</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow-sm">
            <h3 className="text-sm font-medium text-gray-500">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
            <p className="text-3xl font-bold text-gray-900 mt-2">{stats?.activeUsers || 0}</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow-sm">
            <h3 className="text-sm font-medium text-gray-500">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</h3>
            <p className="text-3xl font-bold text-gray-900 mt-2">{stats?.totalProducts || 0}</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow-sm">
            <h3 className="text-sm font-medium text-gray-500">–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–∂</h3>
            <p className="text-3xl font-bold text-gray-900 mt-2">{stats?.totalSales || 0}</p>
          </div>
        </div>

        {/* Admin Navigation Shortcuts */}
        <div className="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
          <div className="px-6 py-4 border-b flex justify-between items-center">
            <h2 className="text-lg font-medium text-gray-900">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–º</h2>
            <button
              onClick={clearTemporaryData}
              className="px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm flex items-center"
            >
              <TrashIcon className="h-4 w-4 mr-2" />
              –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            </button>
          </div>
          <div className="p-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            <Link to="/admin/products" className="bg-blue-50 p-4 rounded-lg hover:bg-blue-100 flex flex-col items-center text-center">
              <div className="text-blue-600 text-2xl mb-2">üõí</div>
              <div className="font-medium text-gray-900">–¢–æ–≤–∞—Ä—ã</div>
              <div className="text-sm text-gray-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏</div>
            </Link>
            <Link to="/admin/products/add" className="bg-green-50 p-4 rounded-lg hover:bg-green-100 flex flex-col items-center text-center">
              <div className="text-green-600 text-2xl mb-2">‚ûï</div>
              <div className="font-medium text-gray-900">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</div>
              <div className="text-sm text-gray-500">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</div>
            </Link>
            <Link to="/admin/categories" className="bg-purple-50 p-4 rounded-lg hover:bg-purple-100 flex flex-col items-center text-center">
              <div className="text-purple-600 text-2xl mb-2">üìã</div>
              <div className="font-medium text-gray-900">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</div>
              <div className="text-sm text-gray-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</div>
            </Link>
            <Link to="/admin/users" className="bg-yellow-50 p-4 rounded-lg hover:bg-yellow-100 flex flex-col items-center text-center">
              <div className="text-yellow-600 text-2xl mb-2">üë•</div>
              <div className="font-medium text-gray-900">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</div>
              <div className="text-sm text-gray-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏</div>
            </Link>
            <Link to="/admin/user-credentials" className="bg-red-50 p-4 rounded-lg hover:bg-red-100 flex flex-col items-center text-center">
              <div className="text-red-600 text-2xl mb-2">üîê</div>
              <div className="font-medium text-gray-900">–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</div>
              <div className="text-sm text-gray-500">–ü–∞—Ä–æ–ª–∏ –∏ –¥–æ—Å—Ç—É–ø—ã</div>
            </Link>
            <Link to="/admin/site-settings" className="bg-indigo-50 p-4 rounded-lg hover:bg-indigo-100 flex flex-col items-center text-center">
              <div className="text-indigo-600 text-2xl mb-2">‚öôÔ∏è</div>
              <div className="font-medium text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞</div>
              <div className="text-sm text-gray-500">–î–∏–∑–∞–π–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ</div>
            </Link>
            <Link to="/admin/settings" className="bg-gray-50 p-4 rounded-lg hover:bg-gray-100 flex flex-col items-center text-center">
              <div className="text-gray-600 text-2xl mb-2">üîß</div>
              <div className="font-medium text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
              <div className="text-sm text-gray-500">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</div>
            </Link>
            <a href="/" target="_blank" className="bg-teal-50 p-4 rounded-lg hover:bg-teal-100 flex flex-col items-center text-center">
              <div className="text-teal-600 text-2xl mb-2">üè†</div>
              <div className="font-medium text-gray-900">–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç</div>
              <div className="text-sm text-gray-500">–û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ</div>
            </a>
          </div>
        </div>

        {/* Pending moderation */}
        <div className="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
          <div className="px-6 py-4 border-b flex justify-between items-center">
            <div>
              <h2 className="text-lg font-medium text-gray-900">–û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h2>
              <p className="text-sm text-gray-500 mt-1">
                –¢–æ–≤–∞—Ä—ã: {stats?.pendingModeration?.length || 0}
              </p>
            </div>
            <button
              className="p-2 rounded-md text-gray-500 hover:text-gray-700 hover:bg-gray-100"
              onClick={loadAdminData}
              disabled={refreshing}
            >
              <ArrowPathIcon className={`h-5 w-5 ${refreshing ? 'animate-spin' : ''}`} />
            </button>
          </div>
          <div className="overflow-x-auto">
            {stats?.pendingModeration && stats.pendingModeration.length > 0 ? (
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      ID
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ù–∞–∑–≤–∞–Ω–∏–µ
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ü—Ä–æ–¥–∞–≤–µ—Ü
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –¶–µ–Ω–∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –î–∞—Ç–∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –î–µ–π—Å—Ç–≤–∏—è
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {stats.pendingModeration.map((product: UserProduct) => (
                    <tr key={product.id}>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {product.id}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {product.title}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {product.userId}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {product.price} ‚ÇΩ
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {new Date(product.created).toLocaleDateString()}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <button
                          className="text-green-600 hover:text-green-900 mr-3"
                          onClick={() => handleApproveProduct(product.id)}
                        >
                          <CheckIcon className="h-5 w-5 inline mr-1" />
                          –û–¥–æ–±—Ä–∏—Ç—å
                        </button>
                        <button
                          className="text-red-600 hover:text-red-900"
                          onClick={() => handleRejectProduct(product.id)}
                        >
                          <XMarkIcon className="h-5 w-5 inline mr-1" />
                          –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <div className="py-12 px-6 text-center">
                <ExclamationTriangleIcon className="mx-auto h-12 w-12 text-gray-300" />
                <h3 className="mt-2 text-lg font-semibold text-gray-900">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h3>
                <p className="mt-1 text-gray-500">–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –º–æ–¥–µ—Ä–∞—Ü–∏–∏.</p>
              </div>
            )}
          </div>
        </div>

        {/* Recent transactions */}
        <div className="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
          <div className="px-6 py-4 border-b">
            <h2 className="text-lg font-medium text-gray-900">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h2>
          </div>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    ID
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—É–º–º–∞
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞—Ç—É—Å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–∞—Ç–∞
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {stats?.recentTransactions?.map((transaction: any) => (
                  <tr key={transaction.id}>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {transaction.id}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {transaction.userId}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {transaction.amount} ‚ÇΩ
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span
                        className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                          transaction.status === 'completed'
                            ? 'bg-green-100 text-green-800'
                            : transaction.status === 'pending'
                            ? 'bg-yellow-100 text-yellow-800'
                            : transaction.status === 'refunded'
                            ? 'bg-blue-100 text-blue-800'
                            : 'bg-red-100 text-red-800'
                        }`}
                      >
                        {transaction.status === 'completed'
                          ? '–ó–∞–≤–µ—Ä—à–µ–Ω'
                          : transaction.status === 'pending'
                          ? '–í –æ–∂–∏–¥–∞–Ω–∏–∏'
                          : transaction.status === 'refunded'
                          ? '–í–æ–∑–≤—Ä–∞—Ç'
                          : '–û—à–∏–±–∫–∞'}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {new Date(transaction.createdAt).toLocaleDateString()}
                    </td>
                  </tr>
                ))}
                {(!stats?.recentTransactions || stats.recentTransactions.length === 0) && (
                  <tr>
                    <td colSpan={5} className="px-6 py-4 text-center text-sm text-gray-500">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>
      </main>
    </div>
  );
};

export default AdminDashboard;
